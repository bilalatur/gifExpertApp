{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","prototypes","PropTypes","func","isRequired","GifGridItem","id","title","url","src","alt","GetGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","className","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mNAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,QAKhD,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,aAsB9BZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,YC7BrBC,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,gCACI,qBAAKC,IAAMD,EAAME,IAAMH,IACvB,4BAAIA,Q,uBCNHI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbL,EADa,0FAC4EM,UAAUF,GADtF,sBAEIG,MAAMP,GAFV,cAEbQ,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QARvB,kBAYZW,GAZY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZxB,mBAAS,CAC/B8B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WACNjB,EAASC,GACJiB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,WAEb,CAACb,IAEIc,EDjBwBM,CAAapB,GAArCa,EAF4B,EAE5BA,QAAcH,EAFc,EAEnBJ,KAGhB,OACI,qCACI,6BAAKN,IACJa,GAAW,0DACZ,qBAAKQ,UAAU,YAAf,SAEQX,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIf,aEbpB4B,EAAe,WAAO,IAAD,EAEM9C,mBAAS,CAAC,iBAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWwB,KAAI,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAEvBA,SAAUA,GADLA,YCZ7BuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.13b1e7c1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n       setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories])\r\n        }\r\n    }  \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}>\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div>\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const GetGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=16YzGfsYqMcLp4aBhd4eLPRa3q2KfGeJ&q=${encodeURI(category)}&limit=10`\r\n    const response = await fetch(url);  \r\n    const {data} = await response.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {loading, data:images} = useFetchGifs(category) \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Cargando los mejores Gifs</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                    ) )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport { GetGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        GetGifs( category )\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false \r\n                    });\r\n                }, 1500)\r\n            })\r\n    },[category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Los Simpsons\"] )\r\n\r\n    return(  \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => <GifGrid \r\n                        key={category}\r\n                        category={category}/>)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {GifExpertApp} from './GifExpertApp'\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}